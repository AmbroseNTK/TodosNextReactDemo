{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.5eba13cc9f0cc4af8a50.hot-update.js","sources":["webpack:///./hooks/todos.hook.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport useLocalStorage from './storage.hook';\r\n\r\nconst DB_NAME = \"todos-next-demo-db\";\r\n\r\nexport function useTodos(initTaskList = []) {\r\n\r\n    const [taskList, setTaskList] = useState([]);\r\n\r\n    const [data, setData, isLoaded] = useLocalStorage(DB_NAME);\r\n\r\n    function jsonToArray(json) {\r\n        let result = [];\r\n        let keys = Object.keys(json);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            result.push(json[keys[i]]);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    function arrayToJson(array) {\r\n        let json = {};\r\n        for (let i = 0; i < array.length; i++) {\r\n            json[i] = array[i];\r\n        }\r\n        return json;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (data.data != undefined) {\r\n            setTaskList(jsonToArray(data.data));\r\n        }\r\n        setData({ data: arrayToJson(taskList) });\r\n    }, [taskList])\r\n\r\n    function change(tasks) {\r\n        setTaskList(tasks);\r\n    }\r\n\r\n    function addTask(task) {\r\n        change([...taskList, task]);\r\n    }\r\n\r\n    function removeTask(pos) {\r\n        let removed = [];\r\n        for (let i = 0; i < taskList.length; i++) {\r\n            if (i != pos) {\r\n                removed.push(taskList[i]);\r\n            }\r\n        }\r\n        change([...removed]);\r\n    }\r\n\r\n    function editTask(pos, handle) {\r\n        let updated = taskList;\r\n        updated[pos] = handle(updated[pos]);\r\n        change([...updated]);\r\n    }\r\n\r\n    return [\r\n        taskList,\r\n        addTask,\r\n        editTask,\r\n        removeTask\r\n    ];\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;;;;A","sourceRoot":""}